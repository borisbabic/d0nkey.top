
02:35:46.321 [info]  Migrations already up
warning: test/hearthstone/api_test.ex does not match "*_test.exs" and won't be loaded
02:35:49.976 [error] GenServer Backend.LatestHSArticles terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.807.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (ecto 3.7.1) lib/ecto/repo/queryable.ex:219: Ecto.Repo.Queryable.execute/4
    (ecto 3.7.1) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3
    (ecto 3.7.1) lib/ecto/repo/queryable.ex:146: Ecto.Repo.Queryable.one/3
    (backend 0.1.0) lib/backend/feed.ex:225: Backend.Feed.handle_articles_item/2
    (backend 0.1.0) lib/backend/latest_hs_arcticles.ex:18: Backend.LatestHSArticles.do_update/0
    (backend 0.1.0) lib/backend/latest_hs_arcticles.ex:10: Backend.LatestHSArticles.handle_continue/2
Last message: {:continue, :update_articles}
02:35:50.751 [error] GenServer Backend.LatestHSArticles terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.882.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (ecto 3.7.1) lib/ecto/repo/queryable.ex:219: Ecto.Repo.Queryable.execute/4
    (ecto 3.7.1) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3
    (ecto 3.7.1) lib/ecto/repo/queryable.ex:146: Ecto.Repo.Queryable.one/3
    (backend 0.1.0) lib/backend/feed.ex:225: Backend.Feed.handle_articles_item/2
    (backend 0.1.0) lib/backend/latest_hs_arcticles.ex:18: Backend.LatestHSArticles.do_update/0
    (backend 0.1.0) lib/backend/latest_hs_arcticles.ex:10: Backend.LatestHSArticles.handle_continue/2
    (stdlib 3.14.2) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.2) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, :update_articles}
02:35:51.075 [error] Task #PID<0.894.0> started from :grandmasters terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.894.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (ecto 3.7.1) lib/ecto/repo/queryable.ex:219: Ecto.Repo.Queryable.execute/4
    (ecto 3.7.1) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3
    (ecto 3.7.1) lib/ecto/repo/queryable.ex:146: Ecto.Repo.Queryable.one/3
    (backend 0.1.0) lib/backend/hearthstone.ex:273: Backend.Hearthstone.get_or_create_lineup/4
    (elixir 1.12.3) lib/enum.ex:1582: Enum."-map/2-lists^map/1-0-"/2
    (backend 0.1.0) lib/backend/grandmasters/lineup_fetcher.ex:24: Backend.Grandmasters.LineupFetcher.save_lineups/2
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<14.113857560/0 in Backend.Grandmasters.update_table/2>
    Args: []
02:35:51.261 [error] GenServer Backend.LatestHSArticles terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.902.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (ecto 3.7.1) lib/ecto/repo/queryable.ex:219: Ecto.Repo.Queryable.execute/4
    (ecto 3.7.1) lib/ecto/repo/queryable.ex:19: Ecto.Repo.Queryable.all/3
    (ecto 3.7.1) lib/ecto/repo/queryable.ex:146: Ecto.Repo.Queryable.one/3
    (backend 0.1.0) lib/backend/feed.ex:225: Backend.Feed.handle_articles_item/2
    (backend 0.1.0) lib/backend/latest_hs_arcticles.ex:18: Backend.LatestHSArticles.do_update/0
    (backend 0.1.0) lib/backend/latest_hs_arcticles.ex:10: Backend.LatestHSArticles.handle_continue/2
    (stdlib 3.14.2) gen_server.erl:689: :gen_server.try_dispatch/4
    (stdlib 3.14.2) gen_server.erl:431: :gen_server.loop/7
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Last message: {:continue, :update_articles}
02:35:51.319 [error] Task #PID<0.927.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.927.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.320 [error] Task #PID<0.978.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.978.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.319 [error] Task #PID<0.979.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.979.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.320 [error] Task #PID<0.980.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.980.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.321 [error] Task #PID<0.963.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.963.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.321 [error] Task #PID<0.981.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.981.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.322 [error] Task #PID<0.971.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.971.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.319 [error] Task #PID<0.956.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.956.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.324 [error] Task #PID<0.977.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.977.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.320 [error] Task #PID<0.958.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.958.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.320 [error] Task #PID<0.961.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.961.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.321 [error] Task #PID<0.965.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.965.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.322 [error] Task #PID<0.967.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.967.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.327 [error] Task #PID<0.1029.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1029.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.320 [error] Task #PID<0.926.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.926.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.328 [error] Task #PID<0.1033.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1033.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.322 [error] Task #PID<0.969.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.969.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.323 [error] Task #PID<0.975.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.975.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.331 [error] Task #PID<0.932.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.932.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.323 [error] Task #PID<0.973.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.973.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.320 [error] Task #PID<0.945.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.945.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.329 [error] Task #PID<0.1035.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1035.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.333 [error] Task #PID<0.933.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.933.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.321 [error] Task #PID<0.947.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.947.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.319 [error] Task #PID<0.1008.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1008.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.321 [error] Task #PID<0.948.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.948.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.320 [error] Task #PID<0.1012.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1012.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.321 [error] Task #PID<0.1014.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1014.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.339 [error] Task #PID<0.937.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.937.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.322 [error] Task #PID<0.1018.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1018.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.321 [error] Task #PID<0.1016.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1016.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.336 [error] Task #PID<0.934.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.934.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.343 [error] Task #PID<0.941.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.941.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.322 [error] Task #PID<0.950.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.950.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.322 [error] Task #PID<0.952.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.952.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.341 [error] Task #PID<0.939.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.939.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.323 [error] Task #PID<0.1021.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1021.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.344 [error] Task #PID<0.943.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.943.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.323 [error] Task #PID<0.954.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.954.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.351 [error] Task #PID<0.949.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.949.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.324 [error] Task #PID<0.1023.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1023.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.342 [error] Task #PID<0.1041.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1041.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.324 [error] Task #PID<0.982.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.982.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.325 [error] Task #PID<0.1027.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1027.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.339 [error] Task #PID<0.983.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.983.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.325 [error] Task #PID<0.1025.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1025.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.340 [error] Task #PID<0.984.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.984.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.328 [error] Task #PID<0.1031.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1031.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.339 [error] Task #PID<0.1039.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1039.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.335 [error] Task #PID<0.1037.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1037.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.341 [error] Task #PID<0.985.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.985.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.350 [error] Task #PID<0.1043.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1043.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.351 [error] Task #PID<0.1044.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1044.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.357 [error] Task #PID<0.1010.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1010.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.357 [error] Task #PID<0.1009.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1009.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.350 [error] Task #PID<0.946.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.946.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.342 [error] Task #PID<0.986.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.986.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.359 [error] Task #PID<0.1017.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1017.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.359 [error] Task #PID<0.1015.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1015.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.359 [error] Task #PID<0.957.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.957.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.353 [error] Task #PID<0.955.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.955.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.360 [error] Task #PID<0.1022.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1022.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.360 [error] Task #PID<0.1024.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1024.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.343 [error] Task #PID<0.987.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.987.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.343 [error] Task #PID<0.988.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.988.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.361 [error] Task #PID<0.962.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.962.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.361 [error] Task #PID<0.1026.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1026.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.361 [error] Task #PID<0.1028.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1028.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.344 [error] Task #PID<0.989.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.989.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.362 [error] Task #PID<0.964.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.964.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.362 [error] Task #PID<0.1032.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1032.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.362 [error] Task #PID<0.1030.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1030.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.363 [error] Task #PID<0.966.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.966.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.364 [error] Task #PID<0.960.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.960.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.363 [error] Task #PID<0.1036.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1036.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.363 [error] Task #PID<0.1034.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1034.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.371 [error] Task #PID<0.970.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.970.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.368 [error] Task #PID<0.968.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.968.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.380 [error] Task #PID<0.1038.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1038.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.381 [error] Task #PID<0.974.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.974.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.380 [error] Task #PID<0.972.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.972.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.328 [error] Task #PID<0.990.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.990.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.327 [error] Task #PID<0.929.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.929.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.326 [error] Task #PID<0.928.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.928.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.329 [error] Task #PID<0.991.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.991.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.328 [error] Task #PID<0.930.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.930.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.329 [error] Task #PID<0.931.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.931.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.339 [error] Task #PID<0.936.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.936.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.340 [error] Task #PID<0.938.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.938.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.385 [error] Task #PID<0.1042.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1042.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.330 [error] Task #PID<0.992.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.992.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.386 [error] Task #PID<0.1045.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1045.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.382 [error] Task #PID<0.976.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.976.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.350 [error] Task #PID<0.944.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.944.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.351 [error] Task #PID<0.951.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.951.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.342 [error] Task #PID<0.940.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.940.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.361 [error] Task #PID<0.959.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.959.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.384 [error] Task #PID<0.935.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.935.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.344 [error] Task #PID<0.942.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.942.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.392 [error] Task #PID<0.1047.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1047.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.380 [error] Task #PID<0.1040.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1040.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.440 [error] Task #PID<0.1057.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1057.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.442 [error] Task #PID<0.1058.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1058.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.330 [error] Task #PID<0.993.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.993.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.332 [error] Task #PID<0.995.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.995.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.340 [error] Task #PID<0.996.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.996.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.340 [error] Task #PID<0.997.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.997.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.341 [error] Task #PID<0.998.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.998.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.342 [error] Task #PID<0.1000.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1000.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.331 [error] Task #PID<0.994.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.994.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.343 [error] Task #PID<0.1001.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1001.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.436 [error] Task #PID<0.1055.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1055.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.462 [error] Task #PID<0.1056.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1056.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.351 [error] Task #PID<0.1002.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1002.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.355 [error] Task #PID<0.1004.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1004.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.357 [error] Task #PID<0.1007.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1007.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.358 [error] Task #PID<0.1011.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1011.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.359 [error] Task #PID<0.1019.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1019.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.355 [error] Task #PID<0.1005.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1005.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.387 [error] Task #PID<0.1046.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1046.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.353 [error] Task #PID<0.1003.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1003.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.352 [error] Task #PID<0.953.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.953.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.356 [error] Task #PID<0.1006.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1006.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.388 [error] Task #PID<0.1048.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1048.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.358 [error] Task #PID<0.1013.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1013.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.389 [error] Task #PID<0.1049.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1049.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.360 [error] Task #PID<0.1020.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1020.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.341 [error] Task #PID<0.999.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.999.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.391 [error] Task #PID<0.1052.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1052.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.390 [error] Task #PID<0.1051.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1051.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.391 [error] Task #PID<0.1053.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1053.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.390 [error] Task #PID<0.1050.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1050.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []
02:35:51.406 [error] Task #PID<0.1054.0> started from :streamer_twitch_info_updater terminating
** (DBConnection.OwnershipError) cannot find ownership process for #PID<0.1054.0>.

When using ownership, you must manage connections in one
of the four ways:

* By explicitly checking out a connection
* By explicitly allowing a spawned process
* By running the pool in shared mode
* By using :caller option with allowed process

The first two options require every new process to explicitly
check a connection out or be allowed by calling checkout or
allow respectively.

The third option requires a {:shared, pid} mode to be set.
If using shared mode in tests, make sure your tests are not
async.

The fourth option requires [caller: pid] to be used when
checking out a connection from the pool. The caller process
should already be allowed on a connection.

If you are reading this error, it means you have not done one
of the steps above or that the owner process has crashed.

See Ecto.Adapters.SQL.Sandbox docs for more information.
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:757: Ecto.Adapters.SQL.raise_sql_call_error/1
    (ecto_sql 3.7.1) lib/ecto/adapters/sql.ex:693: Ecto.Adapters.SQL.execute/5
    (elixir 1.12.3) lib/task/supervised.ex:90: Task.Supervised.invoke_mfa/2
    (elixir 1.12.3) lib/task/supervised.ex:35: Task.Supervised.reply/5
    (stdlib 3.14.2) proc_lib.erl:226: :proc_lib.init_p_do_apply/3
Function: #Function<5.6269998/0 in Util.async_map/2>
    Args: []


  1) doctest Backend.TournamentStats.TeamStats.median/1 (6) (Backend.Doctest)
     test/backend/docktest_test.exs:11
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



  2) doctest Backend.Battlefy.tournament_link_to_id/1 (1) (Backend.Doctest)
     test/backend/docktest_test.exs:7
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



  3) doctest Backend.TournamentStats.TeamStats.worst/1 (12) (Backend.Doctest)
     test/backend/docktest_test.exs:11
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



  4) doctest Backend.MastersTour.PlayerStats.worst/1 (7) (Backend.Doctest)
     test/backend/docktest_test.exs:9
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



  5) doctest Backend.TournamentStats.TeamStats.update/2 (9) (Backend.Doctest)
     test/backend/docktest_test.exs:11
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



  6) doctest Backend.BattlefyUtil.get_matchnum/3 (1) (Backend.Doctest)
     test/backend/docktest_test.exs:8
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



  7) doctest Backend.BattlefyUtil.get_prev_rounds_matches/2 (4) (Backend.Doctest)
     test/backend/docktest_test.exs:8
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



  8) doctest Backend.MastersTour.PlayerStats.with_result/1 (6) (Backend.Doctest)
     test/backend/docktest_test.exs:9
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



  9) doctest Backend.TournamentStats.TeamStats.create/1 (2) (Backend.Doctest)
     test/backend/docktest_test.exs:11
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 10) doctest Backend.Blizzard.get_ladder_seasons/1 (2) (Backend.Doctest)
     test/backend/docktest_test.exs:5
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 11) doctest Backend.TournamentStats.TeamStats.losses/2 (3) (Backend.Doctest)
     test/backend/docktest_test.exs:11
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 12) doctest Backend.MastersTour.PlayerStats.median/1 (4) (Backend.Doctest)
     test/backend/docktest_test.exs:9
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 13) doctest Backend.Hearthstone.Deck.decode/1 (1) (Backend.Doctest)
     test/backend/docktest_test.exs:4
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 14) doctest Backend.Hearthstone.Deck.normalize_class_name/1 (2) (Backend.Doctest)
     test/backend/docktest_test.exs:4
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 15) doctest Backend.Blizzard.get_month_start/2 (5) (Backend.Doctest)
     test/backend/docktest_test.exs:5
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 16) doctest Backend.Blizzard.get_ladder_tour_stop!/1 (4) (Backend.Doctest)
     test/backend/docktest_test.exs:5
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 17) doctest Backend.MastersTour.PlayerStats.only_losses_percent/1 (5) (Backend.Doctest)
     test/backend/docktest_test.exs:9
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 18) doctest Backend.BattlefyUtil.prev_top/3 (7) (Backend.Doctest)
     test/backend/docktest_test.exs:8
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 19) doctest Backend.BattlefyUtil.get_neighbor/3 (2) (Backend.Doctest)
     test/backend/docktest_test.exs:8
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 20) doctest Backend.Blizzard.get_ladder_priority!/1 (1) (Backend.Doctest)
     test/backend/docktest_test.exs:5
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 21) doctest Backend.MastersTour.PlayerStats.best/1 (1) (Backend.Doctest)
     test/backend/docktest_test.exs:9
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 22) doctest Backend.BattlefyUtil.next_round_match/3 (5) (Backend.Doctest)
     test/backend/docktest_test.exs:8
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 23) doctest Backend.Blizzard.ladders_to_check/2 (8) (Backend.Doctest)
     test/backend/docktest_test.exs:5
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 24) doctest Backend.TournamentStats.TeamStats.matches_won_percent/2 (5) (Backend.Doctest)
     test/backend/docktest_test.exs:11
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 25) doctest Backend.Blizzard.get_ladder_tour_stop/1 (3) (Backend.Doctest)
     test/backend/docktest_test.exs:5
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 26) doctest Backend.MastersTour.PlayerStats.matches/1 (2) (Backend.Doctest)
     test/backend/docktest_test.exs:9
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 27) doctest Backend.Streaming.reasonable_legend_change?/2 (1) (Backend.Doctest)
     test/backend/docktest_test.exs:14
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 28) doctest Backend.BattlefyUtil.prev_bottom/3 (6) (Backend.Doctest)
     test/backend/docktest_test.exs:8
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 29) doctest Backend.MastersTour.PlayerStats.matches_won_percent/1 (3) (Backend.Doctest)
     test/backend/docktest_test.exs:9
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 30) doctest Backend.TournamentStats.TeamStats.wins/2 (10) (Backend.Doctest)
     test/backend/docktest_test.exs:11
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 31) doctest Backend.TournamentStats.TeamStats.matches/2 (4) (Backend.Doctest)
     test/backend/docktest_test.exs:11
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 32) doctest Backend.Blizzard.get_tour_stop_region!/1 (7) (Backend.Doctest)
     test/backend/docktest_test.exs:5
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 33) doctest Backend.Blizzard.ladders_to_check/3 (9) (Backend.Doctest)
     test/backend/docktest_test.exs:5
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 34) doctest Backend.TournamentStats.TeamStats.best/1 (1) (Backend.Doctest)
     test/backend/docktest_test.exs:11
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 35) doctest Backend.Blizzard.get_season_id/2 (6) (Backend.Doctest)
     test/backend/docktest_test.exs:5
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 36) doctest Backend.TournamentStats.TeamStats.only_losses_percent/1 (8) (Backend.Doctest)
     test/backend/docktest_test.exs:11
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 37) doctest Backend.HSDeckViewer.extract_codes/1 (1) (Backend.Doctest)
     test/backend/docktest_test.exs:12
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 38) doctest Backend.TournamentStats.TeamStats.with_result/1 (11) (Backend.Doctest)
     test/backend/docktest_test.exs:11
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 39) doctest Backend.BattlefyUtil.get_pos_in_round/3 (3) (Backend.Doctest)
     test/backend/docktest_test.exs:8
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 40) doctest Backend.TournamentStats.TeamStats.num_won/1 (7) (Backend.Doctest)
     test/backend/docktest_test.exs:11
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 41) doctest BackendWeb.LeaderboardView.create_selectable_seasons/2 (1) (Backend.Doctest)
     test/backend/docktest_test.exs:6
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 42) doctest Backend.Yaytears.extract_codes/1 (1) (Backend.Doctest)
     test/backend/docktest_test.exs:13
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/docktest_test.exs:1: Backend.Doctest.__ex_unit__/2



 43) test renders 500.html (BackendWeb.ErrorViewTest)
     test/backend_web/views/error_view_test.exs:11
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/views/error_view_test.exs:1: BackendWeb.ErrorViewTest.__ex_unit__/2



 44) test renders 404.html (BackendWeb.ErrorViewTest)
     test/backend_web/views/error_view_test.exs:7
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/views/error_view_test.exs:1: BackendWeb.ErrorViewTest.__ex_unit__/2



 45) doctest Util.map_abort_on_error/2 (10) (UtilTest)
     test/util_test.exs:3
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/util_test.exs:1: UtilTest.__ex_unit__/2



 46) doctest Util.percent/2 (16) (UtilTest)
     test/util_test.exs:3
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/util_test.exs:1: UtilTest.__ex_unit__/2



 47) doctest Util.get_percentile/3 (4) (UtilTest)
     test/util_test.exs:3
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/util_test.exs:1: UtilTest.__ex_unit__/2



 48) doctest Util.median/1 (13) (UtilTest)
     test/util_test.exs:3
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/util_test.exs:1: UtilTest.__ex_unit__/2



 49) doctest Util.get_month_name/1 (3) (UtilTest)
     test/util_test.exs:3
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/util_test.exs:1: UtilTest.__ex_unit__/2



 50) doctest Util.get_previous_range/1 (6) (UtilTest)
     test/util_test.exs:3
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/util_test.exs:1: UtilTest.__ex_unit__/2



 51) doctest Util.get_surrounding_ranges/1 (7) (UtilTest)
     test/util_test.exs:3
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/util_test.exs:1: UtilTest.__ex_unit__/2



 52) doctest Util.datetime_to_presentable_string/1 (1) (UtilTest)
     test/util_test.exs:3
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/util_test.exs:1: UtilTest.__ex_unit__/2



 53) doctest Util.get_following_range/1 (2) (UtilTest)
     test/util_test.exs:3
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/util_test.exs:1: UtilTest.__ex_unit__/2



 54) doctest Util.map_abort_on_error/2 (9) (UtilTest)
     test/util_test.exs:3
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/util_test.exs:1: UtilTest.__ex_unit__/2



 55) doctest Util.to_int_or_orig/1 (19) (UtilTest)
     test/util_test.exs:3
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/util_test.exs:1: UtilTest.__ex_unit__/2



 56) doctest Util.normalize_month/1 (14) (UtilTest)
     test/util_test.exs:3
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/util_test.exs:1: UtilTest.__ex_unit__/2



 57) doctest Util.gs_call_if_up/3 (8) (UtilTest)
     test/util_test.exs:3
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/util_test.exs:1: UtilTest.__ex_unit__/2



 58) doctest Util.get_percentile_unsorted/3 (5) (UtilTest)
     test/util_test.exs:3
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/util_test.exs:1: UtilTest.__ex_unit__/2



 59) doctest Util.map_abort_on_error/2 (12) (UtilTest)
     test/util_test.exs:3
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/util_test.exs:1: UtilTest.__ex_unit__/2



 60) doctest Util.place_in_cycle/3 (17) (UtilTest)
     test/util_test.exs:3
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/util_test.exs:1: UtilTest.__ex_unit__/2



 61) doctest Util.pad_time_element/1 (15) (UtilTest)
     test/util_test.exs:3
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/util_test.exs:1: UtilTest.__ex_unit__/2



 62) doctest Util.map_abort_on_error/2 (11) (UtilTest)
     test/util_test.exs:3
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/util_test.exs:1: UtilTest.__ex_unit__/2



 63) doctest Util.to_int/2 (18) (UtilTest)
     test/util_test.exs:3
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/util_test.exs:1: UtilTest.__ex_unit__/2



 64) test edit user renders form for editing chosen user (BackendWeb.UserControllerTest)
     test/backend_web/controllers/user_controller_test.exs:74
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/user_controller_test.exs:1: BackendWeb.UserControllerTest.__ex_unit__/2



 65) test new user renders form (BackendWeb.UserControllerTest)
     test/backend_web/controllers/user_controller_test.exs:44
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/user_controller_test.exs:1: BackendWeb.UserControllerTest.__ex_unit__/2



 66) test delete user deletes chosen user (BackendWeb.UserControllerTest)
     test/backend_web/controllers/user_controller_test.exs:104
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/user_controller_test.exs:1: BackendWeb.UserControllerTest.__ex_unit__/2



 67) test create user redirects to show when data is valid (BackendWeb.UserControllerTest)
     test/backend_web/controllers/user_controller_test.exs:53
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/user_controller_test.exs:1: BackendWeb.UserControllerTest.__ex_unit__/2



 68) test index lists all users (BackendWeb.UserControllerTest)
     test/backend_web/controllers/user_controller_test.exs:35
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/user_controller_test.exs:1: BackendWeb.UserControllerTest.__ex_unit__/2



 69) test update user redirects when data is valid (BackendWeb.UserControllerTest)
     test/backend_web/controllers/user_controller_test.exs:85
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/user_controller_test.exs:1: BackendWeb.UserControllerTest.__ex_unit__/2



 70) test create user renders errors when data is invalid (BackendWeb.UserControllerTest)
     test/backend_web/controllers/user_controller_test.exs:63
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/user_controller_test.exs:1: BackendWeb.UserControllerTest.__ex_unit__/2



 71) test update user renders errors when data is invalid (BackendWeb.UserControllerTest)
     test/backend_web/controllers/user_controller_test.exs:93
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/user_controller_test.exs:1: BackendWeb.UserControllerTest.__ex_unit__/2



 72) test edit twitch_command renders form for editing chosen twitch_command (BackendWeb.TwitchCommandControllerTest)
     test/backend_web/controllers/twitch_command_controller_test.exs:49
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/twitch_command_controller_test.exs:1: BackendWeb.TwitchCommandControllerTest.__ex_unit__/2



 73) test new twitch_command renders form (BackendWeb.TwitchCommandControllerTest)
     test/backend_web/controllers/twitch_command_controller_test.exs:23
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/twitch_command_controller_test.exs:1: BackendWeb.TwitchCommandControllerTest.__ex_unit__/2



 74) test delete twitch_command deletes chosen twitch_command (BackendWeb.TwitchCommandControllerTest)
     test/backend_web/controllers/twitch_command_controller_test.exs:75
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/twitch_command_controller_test.exs:1: BackendWeb.TwitchCommandControllerTest.__ex_unit__/2



 75) test create twitch_command redirects to show when data is valid (BackendWeb.TwitchCommandControllerTest)
     test/backend_web/controllers/twitch_command_controller_test.exs:30
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/twitch_command_controller_test.exs:1: BackendWeb.TwitchCommandControllerTest.__ex_unit__/2



 76) test index lists all twitch_commands (BackendWeb.TwitchCommandControllerTest)
     test/backend_web/controllers/twitch_command_controller_test.exs:16
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/twitch_command_controller_test.exs:1: BackendWeb.TwitchCommandControllerTest.__ex_unit__/2



 77) test update twitch_command redirects when data is valid (BackendWeb.TwitchCommandControllerTest)
     test/backend_web/controllers/twitch_command_controller_test.exs:58
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/twitch_command_controller_test.exs:1: BackendWeb.TwitchCommandControllerTest.__ex_unit__/2



 78) test create twitch_command renders errors when data is invalid (BackendWeb.TwitchCommandControllerTest)
     test/backend_web/controllers/twitch_command_controller_test.exs:40
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/twitch_command_controller_test.exs:1: BackendWeb.TwitchCommandControllerTest.__ex_unit__/2



 79) test update twitch_command renders errors when data is invalid (BackendWeb.TwitchCommandControllerTest)
     test/backend_web/controllers/twitch_command_controller_test.exs:66
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/twitch_command_controller_test.exs:1: BackendWeb.TwitchCommandControllerTest.__ex_unit__/2



 80) test GET /streamer-decks doesn't include uncollectible cards in the dropdown (BackendWeb.StreamingControllerTest)
     test/backend_web/controllers/streaming_controller_test.exs:4
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/streaming_controller_test.exs:1: BackendWeb.StreamingControllerTest.__ex_unit__/2



 81) test GET /player-profile/Noflame returns 200 (BackendWeb.PlayerControllerTest)
     test/backend_web/controllers/player_controller_test.exs:9
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/player_controller_test.exs:1: BackendWeb.PlayerControllerTest.__ex_unit__/2



 82) test GET /player-profile/D0nkey%232470 returns 200 (BackendWeb.PlayerControllerTest)
     test/backend_web/controllers/player_controller_test.exs:4
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/player_controller_test.exs:1: BackendWeb.PlayerControllerTest.__ex_unit__/2



 83) test edit old_battletag renders form for editing chosen old_battletag (BackendWeb.OldBattletagControllerTest)
     test/backend_web/controllers/old_battletag_controller_test.exs:59
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/old_battletag_controller_test.exs:1: BackendWeb.OldBattletagControllerTest.__ex_unit__/2



 84) test new old_battletag renders form (BackendWeb.OldBattletagControllerTest)
     test/backend_web/controllers/old_battletag_controller_test.exs:27
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/old_battletag_controller_test.exs:1: BackendWeb.OldBattletagControllerTest.__ex_unit__/2



 85) test delete old_battletag deletes chosen old_battletag (BackendWeb.OldBattletagControllerTest)
     test/backend_web/controllers/old_battletag_controller_test.exs:91
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/old_battletag_controller_test.exs:1: BackendWeb.OldBattletagControllerTest.__ex_unit__/2



 86) test create old_battletag redirects to show when data is valid (BackendWeb.OldBattletagControllerTest)
     test/backend_web/controllers/old_battletag_controller_test.exs:36
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/old_battletag_controller_test.exs:1: BackendWeb.OldBattletagControllerTest.__ex_unit__/2



 87) test index lists all old_battletags (BackendWeb.OldBattletagControllerTest)
     test/backend_web/controllers/old_battletag_controller_test.exs:18
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/old_battletag_controller_test.exs:1: BackendWeb.OldBattletagControllerTest.__ex_unit__/2



 88) test update old_battletag redirects when data is valid (BackendWeb.OldBattletagControllerTest)
     test/backend_web/controllers/old_battletag_controller_test.exs:70
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/old_battletag_controller_test.exs:1: BackendWeb.OldBattletagControllerTest.__ex_unit__/2



 89) test create old_battletag renders errors when data is invalid (BackendWeb.OldBattletagControllerTest)
     test/backend_web/controllers/old_battletag_controller_test.exs:48
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/old_battletag_controller_test.exs:1: BackendWeb.OldBattletagControllerTest.__ex_unit__/2



 90) test update old_battletag renders errors when data is invalid (BackendWeb.OldBattletagControllerTest)
     test/backend_web/controllers/old_battletag_controller_test.exs:80
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/old_battletag_controller_test.exs:1: BackendWeb.OldBattletagControllerTest.__ex_unit__/2



 91) test GET / (BackendWeb.PageControllerTest)
     test/backend_web/controllers/page_controller_test.exs:4
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/page_controller_test.exs:1: BackendWeb.PageControllerTest.__ex_unit__/2



 92) test GET /mt/earnings returns 200 (BackendWeb.MastersTourControllerTest)
     test/backend_web/controllers/masters_tour_controller_test.exs:34
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/masters_tour_controller_test.exs:1: BackendWeb.MastersTourControllerTest.__ex_unit__/2



 93) test GET /mt/qualifier-stats/ responds with 200 (BackendWeb.MastersTourControllerTest)
     test/backend_web/controllers/masters_tour_controller_test.exs:16
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/masters_tour_controller_test.exs:1: BackendWeb.MastersTourControllerTest.__ex_unit__/2



 94) test GET /mt/qualifier-stats/Ironforge creates the proper links in the page size dropdown (BackendWeb.MastersTourControllerTest)
     test/backend_web/controllers/masters_tour_controller_test.exs:26
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/masters_tour_controller_test.exs:1: BackendWeb.MastersTourControllerTest.__ex_unit__/2



 95) test has user tournaments link has_link_when_signed_in (BackendWeb.NavTest)
     test/backend_web/controllers/nav_test.exs:21
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/nav_test.exs:1: BackendWeb.NavTest.__ex_unit__/2



 96) test no user tournaments link no link when not signed in (BackendWeb.NavTest)
     test/backend_web/controllers/nav_test.exs:5
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/nav_test.exs:1: BackendWeb.NavTest.__ex_unit__/2



 97) test no user tournaments link no link when signed in without battlefy_slug set (BackendWeb.NavTest)
     test/backend_web/controllers/nav_test.exs:12
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/nav_test.exs:1: BackendWeb.NavTest.__ex_unit__/2



 98) test edit league renders form for editing chosen league (BackendWeb.LeagueControllerTest)
     test/backend_web/controllers/league_controller_test.exs:85
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/league_controller_test.exs:1: BackendWeb.LeagueControllerTest.__ex_unit__/2



 99) test new league renders form (BackendWeb.LeagueControllerTest)
     test/backend_web/controllers/league_controller_test.exs:55
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/league_controller_test.exs:1: BackendWeb.LeagueControllerTest.__ex_unit__/2



100) test delete league deletes chosen league (BackendWeb.LeagueControllerTest)
     test/backend_web/controllers/league_controller_test.exs:115
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/league_controller_test.exs:1: BackendWeb.LeagueControllerTest.__ex_unit__/2



101) test create league redirects to show when data is valid (BackendWeb.LeagueControllerTest)
     test/backend_web/controllers/league_controller_test.exs:64
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/league_controller_test.exs:1: BackendWeb.LeagueControllerTest.__ex_unit__/2



102) test index lists all leagues (BackendWeb.LeagueControllerTest)
     test/backend_web/controllers/league_controller_test.exs:46
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/league_controller_test.exs:1: BackendWeb.LeagueControllerTest.__ex_unit__/2



103) test update league redirects when data is valid (BackendWeb.LeagueControllerTest)
     test/backend_web/controllers/league_controller_test.exs:96
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/league_controller_test.exs:1: BackendWeb.LeagueControllerTest.__ex_unit__/2



104) test create league renders errors when data is invalid (BackendWeb.LeagueControllerTest)
     test/backend_web/controllers/league_controller_test.exs:74
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/league_controller_test.exs:1: BackendWeb.LeagueControllerTest.__ex_unit__/2



105) test update league renders errors when data is invalid (BackendWeb.LeagueControllerTest)
     test/backend_web/controllers/league_controller_test.exs:104
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/league_controller_test.exs:1: BackendWeb.LeagueControllerTest.__ex_unit__/2



106) test #change_group/1 returns a group changeset (Backend.UserManagerTest)
     test/backend/user_manager_test.exs:153
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/user_manager_test.exs:1: Backend.UserManagerTest.__ex_unit__/2



107) test #update_group_membership/2 with valid data updates the group_membership (Backend.UserManagerTest)
     test/backend/user_manager_test.exs:213
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/user_manager_test.exs:1: Backend.UserManagerTest.__ex_unit__/2



108) test #get_group!/1 returns the group with given id (Backend.UserManagerTest)
     test/backend/user_manager_test.exs:112
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/user_manager_test.exs:1: Backend.UserManagerTest.__ex_unit__/2



109) test #get_group_membership!/1 returns the group_membership with given id (Backend.UserManagerTest)
     test/backend/user_manager_test.exs:195
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/user_manager_test.exs:1: Backend.UserManagerTest.__ex_unit__/2



110) test users list_users/0 returns all users (Backend.UserManagerTest)
     test/backend/user_manager_test.exs:36
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/user_manager_test.exs:1: Backend.UserManagerTest.__ex_unit__/2



111) test #list_groups/0 returns all groups (Backend.UserManagerTest)
     test/backend/user_manager_test.exs:105
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/user_manager_test.exs:1: Backend.UserManagerTest.__ex_unit__/2



112) test #create_group/1 with invalid data returns error changeset (Backend.UserManagerTest)
     test/backend/user_manager_test.exs:124
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/user_manager_test.exs:1: Backend.UserManagerTest.__ex_unit__/2



113) test #update_group/2 with valid data updates the group (Backend.UserManagerTest)
     test/backend/user_manager_test.exs:130
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/user_manager_test.exs:1: Backend.UserManagerTest.__ex_unit__/2



114) test users change_user/1 returns a user changeset (Backend.UserManagerTest)
     test/backend/user_manager_test.exs:75
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/user_manager_test.exs:1: Backend.UserManagerTest.__ex_unit__/2



115) test #paginate_groups/1 returns paginated list of groups (Backend.UserManagerTest)
     test/backend/user_manager_test.exs:86
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/user_manager_test.exs:1: Backend.UserManagerTest.__ex_unit__/2



116) test users create_user/1 with invalid data returns error changeset (Backend.UserManagerTest)
     test/backend/user_manager_test.exs:52
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/user_manager_test.exs:1: Backend.UserManagerTest.__ex_unit__/2



117) test users update_user/2 with valid data updates the user (Backend.UserManagerTest)
     test/backend/user_manager_test.exs:56
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/user_manager_test.exs:1: Backend.UserManagerTest.__ex_unit__/2



118) test users get_user!/1 returns the user with given id (Backend.UserManagerTest)
     test/backend/user_manager_test.exs:41
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/user_manager_test.exs:1: Backend.UserManagerTest.__ex_unit__/2



119) test #delete_group/1 deletes the group (Backend.UserManagerTest)
     test/backend/user_manager_test.exs:145
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/user_manager_test.exs:1: Backend.UserManagerTest.__ex_unit__/2



120) test users update_user/2 with invalid data returns error changeset (Backend.UserManagerTest)
     test/backend/user_manager_test.exs:63
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/user_manager_test.exs:1: Backend.UserManagerTest.__ex_unit__/2



121) test #change_group_membership/1 returns a group_membership changeset (Backend.UserManagerTest)
     test/backend/user_manager_test.exs:236
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/user_manager_test.exs:1: Backend.UserManagerTest.__ex_unit__/2



122) test users create_user/1 with valid data creates a user (Backend.UserManagerTest)
     test/backend/user_manager_test.exs:46
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/user_manager_test.exs:1: Backend.UserManagerTest.__ex_unit__/2



123) test users delete_user/1 deletes the user (Backend.UserManagerTest)
     test/backend/user_manager_test.exs:69
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/user_manager_test.exs:1: Backend.UserManagerTest.__ex_unit__/2



124) test #create_group_membership/1 with valid data creates a group_membership (Backend.UserManagerTest)
     test/backend/user_manager_test.exs:202
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/user_manager_test.exs:1: Backend.UserManagerTest.__ex_unit__/2



125) test #update_group/2 with invalid data returns error changeset (Backend.UserManagerTest)
     test/backend/user_manager_test.exs:137
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/user_manager_test.exs:1: Backend.UserManagerTest.__ex_unit__/2



126) test #create_group/1 with valid data creates a group (Backend.UserManagerTest)
     test/backend/user_manager_test.exs:119
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/user_manager_test.exs:1: Backend.UserManagerTest.__ex_unit__/2



127) test #list_group_memberships/0 returns all group_memberships (Backend.UserManagerTest)
     test/backend/user_manager_test.exs:188
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/user_manager_test.exs:1: Backend.UserManagerTest.__ex_unit__/2



128) test #update_group_membership/2 with invalid data returns error changeset (Backend.UserManagerTest)
     test/backend/user_manager_test.exs:220
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/user_manager_test.exs:1: Backend.UserManagerTest.__ex_unit__/2



129) test #create_group_membership/1 with invalid data returns error changeset (Backend.UserManagerTest)
     test/backend/user_manager_test.exs:207
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/user_manager_test.exs:1: Backend.UserManagerTest.__ex_unit__/2



130) test #paginate_group_memberships/1 returns paginated list of group_memberships (Backend.UserManagerTest)
     test/backend/user_manager_test.exs:169
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/user_manager_test.exs:1: Backend.UserManagerTest.__ex_unit__/2



131) test #delete_group_membership/1 deletes the group_membership (Backend.UserManagerTest)
     test/backend/user_manager_test.exs:228
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/user_manager_test.exs:1: Backend.UserManagerTest.__ex_unit__/2



132) test edit invited_player renders form for editing chosen invited_player (BackendWeb.InvitedPlayerControllerTest)
     test/backend_web/controllers/invited_player_controller_test.exs:85
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/invited_player_controller_test.exs:1: BackendWeb.InvitedPlayerControllerTest.__ex_unit__/2



133) test new invited_player renders form (BackendWeb.InvitedPlayerControllerTest)
     test/backend_web/controllers/invited_player_controller_test.exs:54
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/invited_player_controller_test.exs:1: BackendWeb.InvitedPlayerControllerTest.__ex_unit__/2



134) test delete invited_player deletes chosen invited_player (BackendWeb.InvitedPlayerControllerTest)
     test/backend_web/controllers/invited_player_controller_test.exs:124
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/invited_player_controller_test.exs:1: BackendWeb.InvitedPlayerControllerTest.__ex_unit__/2



135) test create invited_player redirects to show when data is valid (BackendWeb.InvitedPlayerControllerTest)
     test/backend_web/controllers/invited_player_controller_test.exs:63
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/invited_player_controller_test.exs:1: BackendWeb.InvitedPlayerControllerTest.__ex_unit__/2



136) test index lists all invited_player (BackendWeb.InvitedPlayerControllerTest)
     test/backend_web/controllers/invited_player_controller_test.exs:45
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/invited_player_controller_test.exs:1: BackendWeb.InvitedPlayerControllerTest.__ex_unit__/2



137) test update invited_player redirects when data is valid (BackendWeb.InvitedPlayerControllerTest)
     test/backend_web/controllers/invited_player_controller_test.exs:99
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/invited_player_controller_test.exs:1: BackendWeb.InvitedPlayerControllerTest.__ex_unit__/2



138) test create invited_player renders errors when data is invalid (BackendWeb.InvitedPlayerControllerTest)
     test/backend_web/controllers/invited_player_controller_test.exs:73
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/invited_player_controller_test.exs:1: BackendWeb.InvitedPlayerControllerTest.__ex_unit__/2



139) test update invited_player renders errors when data is invalid (BackendWeb.InvitedPlayerControllerTest)
     test/backend_web/controllers/invited_player_controller_test.exs:110
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/invited_player_controller_test.exs:1: BackendWeb.InvitedPlayerControllerTest.__ex_unit__/2



140) test edit group_membership renders form for editing chosen group_membership (BackendWeb.GroupMembershipControllerTest)
     test/backend_web/controllers/group_membership_controller_test.exs:49
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/group_membership_controller_test.exs:1: BackendWeb.GroupMembershipControllerTest.__ex_unit__/2



141) test new group_membership renders form (BackendWeb.GroupMembershipControllerTest)
     test/backend_web/controllers/group_membership_controller_test.exs:23
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/group_membership_controller_test.exs:1: BackendWeb.GroupMembershipControllerTest.__ex_unit__/2



142) test delete group_membership deletes chosen group_membership (BackendWeb.GroupMembershipControllerTest)
     test/backend_web/controllers/group_membership_controller_test.exs:75
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/group_membership_controller_test.exs:1: BackendWeb.GroupMembershipControllerTest.__ex_unit__/2



143) test create group_membership redirects to show when data is valid (BackendWeb.GroupMembershipControllerTest)
     test/backend_web/controllers/group_membership_controller_test.exs:30
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/group_membership_controller_test.exs:1: BackendWeb.GroupMembershipControllerTest.__ex_unit__/2



144) test index lists all group_memberships (BackendWeb.GroupMembershipControllerTest)
     test/backend_web/controllers/group_membership_controller_test.exs:16
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/group_membership_controller_test.exs:1: BackendWeb.GroupMembershipControllerTest.__ex_unit__/2



145) test update group_membership redirects when data is valid (BackendWeb.GroupMembershipControllerTest)
     test/backend_web/controllers/group_membership_controller_test.exs:58
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/group_membership_controller_test.exs:1: BackendWeb.GroupMembershipControllerTest.__ex_unit__/2



146) test create group_membership renders errors when data is invalid (BackendWeb.GroupMembershipControllerTest)
     test/backend_web/controllers/group_membership_controller_test.exs:40
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/group_membership_controller_test.exs:1: BackendWeb.GroupMembershipControllerTest.__ex_unit__/2



147) test update group_membership renders errors when data is invalid (BackendWeb.GroupMembershipControllerTest)
     test/backend_web/controllers/group_membership_controller_test.exs:66
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/group_membership_controller_test.exs:1: BackendWeb.GroupMembershipControllerTest.__ex_unit__/2



148) test GET /leaderboard/region=EU&seasonId=84 INCLUDES D0nkey (BackendWeb.LeaderboardControllerTest)
     test/backend_web/controllers/leaderboard_controller_test.exs:27
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/leaderboard_controller_test.exs:1: BackendWeb.LeaderboardControllerTest.__ex_unit__/2



149) test GET /leaderboard/player-stats?country[HR]=true INCLUDES D0nkey and no flag (BackendWeb.LeaderboardControllerTest)
     test/backend_web/controllers/leaderboard_controller_test.exs:4
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/leaderboard_controller_test.exs:1: BackendWeb.LeaderboardControllerTest.__ex_unit__/2



150) test GET /leaderboard/region=EU&seasonId=84 INCLUDES Bozzzton (BackendWeb.LeaderboardControllerTest)
     test/backend_web/controllers/leaderboard_controller_test.exs:16
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/leaderboard_controller_test.exs:1: BackendWeb.LeaderboardControllerTest.__ex_unit__/2



151) test edit group renders form for editing chosen group (BackendWeb.GroupControllerTest)
     test/backend_web/controllers/group_controller_test.exs:49
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/group_controller_test.exs:1: BackendWeb.GroupControllerTest.__ex_unit__/2



152) test new group renders form (BackendWeb.GroupControllerTest)
     test/backend_web/controllers/group_controller_test.exs:23
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/group_controller_test.exs:1: BackendWeb.GroupControllerTest.__ex_unit__/2



153) test delete group deletes chosen group (BackendWeb.GroupControllerTest)
     test/backend_web/controllers/group_controller_test.exs:75
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/group_controller_test.exs:1: BackendWeb.GroupControllerTest.__ex_unit__/2



154) test create group redirects to show when data is valid (BackendWeb.GroupControllerTest)
     test/backend_web/controllers/group_controller_test.exs:30
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/group_controller_test.exs:1: BackendWeb.GroupControllerTest.__ex_unit__/2



155) test index lists all groups (BackendWeb.GroupControllerTest)
     test/backend_web/controllers/group_controller_test.exs:16
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/group_controller_test.exs:1: BackendWeb.GroupControllerTest.__ex_unit__/2



156) test update group redirects when data is valid (BackendWeb.GroupControllerTest)
     test/backend_web/controllers/group_controller_test.exs:58
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/group_controller_test.exs:1: BackendWeb.GroupControllerTest.__ex_unit__/2



157) test create group renders errors when data is invalid (BackendWeb.GroupControllerTest)
     test/backend_web/controllers/group_controller_test.exs:40
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/group_controller_test.exs:1: BackendWeb.GroupControllerTest.__ex_unit__/2



158) test update group renders errors when data is invalid (BackendWeb.GroupControllerTest)
     test/backend_web/controllers/group_controller_test.exs:66
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/group_controller_test.exs:1: BackendWeb.GroupControllerTest.__ex_unit__/2



159) test edit feed_item renders form for editing chosen feed_item (BackendWeb.FeedItemControllerTest)
     test/backend_web/controllers/feed_item_controller_test.exs:70
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/feed_item_controller_test.exs:1: BackendWeb.FeedItemControllerTest.__ex_unit__/2



160) test new feed_item renders form (BackendWeb.FeedItemControllerTest)
     test/backend_web/controllers/feed_item_controller_test.exs:39
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/feed_item_controller_test.exs:1: BackendWeb.FeedItemControllerTest.__ex_unit__/2



161) test delete feed_item deletes chosen feed_item (BackendWeb.FeedItemControllerTest)
     test/backend_web/controllers/feed_item_controller_test.exs:102
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/feed_item_controller_test.exs:1: BackendWeb.FeedItemControllerTest.__ex_unit__/2



162) test create feed_item redirects to show when data is valid (BackendWeb.FeedItemControllerTest)
     test/backend_web/controllers/feed_item_controller_test.exs:48
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/feed_item_controller_test.exs:1: BackendWeb.FeedItemControllerTest.__ex_unit__/2



163) test index lists all feed_items (BackendWeb.FeedItemControllerTest)
     test/backend_web/controllers/feed_item_controller_test.exs:30
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/feed_item_controller_test.exs:1: BackendWeb.FeedItemControllerTest.__ex_unit__/2



164) test update feed_item redirects when data is valid (BackendWeb.FeedItemControllerTest)
     test/backend_web/controllers/feed_item_controller_test.exs:81
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/feed_item_controller_test.exs:1: BackendWeb.FeedItemControllerTest.__ex_unit__/2



165) test create feed_item renders errors when data is invalid (BackendWeb.FeedItemControllerTest)
     test/backend_web/controllers/feed_item_controller_test.exs:58
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/feed_item_controller_test.exs:1: BackendWeb.FeedItemControllerTest.__ex_unit__/2



166) test update feed_item renders errors when data is invalid (BackendWeb.FeedItemControllerTest)
     test/backend_web/controllers/feed_item_controller_test.exs:90
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/feed_item_controller_test.exs:1: BackendWeb.FeedItemControllerTest.__ex_unit__/2



167) test put game create new game (BackendWeb.DeckTrackerControllerTest)
     test/backend_web/controllers/deck_tracker_controller_test.exs:73
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/deck_tracker_controller_test.exs:1: BackendWeb.DeckTrackerControllerTest.__ex_unit__/2



168) test put game new source is created (BackendWeb.DeckTrackerControllerTest)
     test/backend_web/controllers/deck_tracker_controller_test.exs:107
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/deck_tracker_controller_test.exs:1: BackendWeb.DeckTrackerControllerTest.__ex_unit__/2



169) test put game create hdt game (BackendWeb.DeckTrackerControllerTest)
     test/backend_web/controllers/deck_tracker_controller_test.exs:80
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/deck_tracker_controller_test.exs:1: BackendWeb.DeckTrackerControllerTest.__ex_unit__/2



170) test put game 400 when missing game_id (BackendWeb.DeckTrackerControllerTest)
     test/backend_web/controllers/deck_tracker_controller_test.exs:68
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/deck_tracker_controller_test.exs:1: BackendWeb.DeckTrackerControllerTest.__ex_unit__/2



171) test put game same game with different id isn't duplicated (BackendWeb.DeckTrackerControllerTest)
     test/backend_web/controllers/deck_tracker_controller_test.exs:91
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/deck_tracker_controller_test.exs:1: BackendWeb.DeckTrackerControllerTest.__ex_unit__/2



172) test new battletag renders form (BackendWeb.BattletagControllerTest)
     test/backend_web/controllers/battletag_controller_test.exs:44
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/battletag_controller_test.exs:1: BackendWeb.BattletagControllerTest.__ex_unit__/2



173) test update battletag unauthorized when other user (BackendWeb.BattletagControllerTest)
     test/backend_web/controllers/battletag_controller_test.exs:102
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/battletag_controller_test.exs:1: BackendWeb.BattletagControllerTest.__ex_unit__/2



174) test edit battletag renders form for editing chosen battletag (BackendWeb.BattletagControllerTest)
     test/backend_web/controllers/battletag_controller_test.exs:75
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/battletag_controller_test.exs:1: BackendWeb.BattletagControllerTest.__ex_unit__/2



175) test index lists all battletag_info (BackendWeb.BattletagControllerTest)
     test/backend_web/controllers/battletag_controller_test.exs:35
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/battletag_controller_test.exs:1: BackendWeb.BattletagControllerTest.__ex_unit__/2



176) test delete battletag deletes chosen battletag (BackendWeb.BattletagControllerTest)
     test/backend_web/controllers/battletag_controller_test.exs:129
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/battletag_controller_test.exs:1: BackendWeb.BattletagControllerTest.__ex_unit__/2



177) test update battletag redirects when data is valid (BackendWeb.BattletagControllerTest)
     test/backend_web/controllers/battletag_controller_test.exs:86
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/battletag_controller_test.exs:1: BackendWeb.BattletagControllerTest.__ex_unit__/2



178) test create battletag renders errors when data is invalid (BackendWeb.BattletagControllerTest)
     test/backend_web/controllers/battletag_controller_test.exs:63
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/battletag_controller_test.exs:1: BackendWeb.BattletagControllerTest.__ex_unit__/2



179) test update battletag unauthorized when changing battletag (BackendWeb.BattletagControllerTest)
     test/backend_web/controllers/battletag_controller_test.exs:108
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/battletag_controller_test.exs:1: BackendWeb.BattletagControllerTest.__ex_unit__/2



180) test update battletag renders errors when data is invalid (BackendWeb.BattletagControllerTest)
     test/backend_web/controllers/battletag_controller_test.exs:95
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/battletag_controller_test.exs:1: BackendWeb.BattletagControllerTest.__ex_unit__/2



181) test create battletag redirects to show when data is valid (BackendWeb.BattletagControllerTest)
     test/backend_web/controllers/battletag_controller_test.exs:53
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/battletag_controller_test.exs:1: BackendWeb.BattletagControllerTest.__ex_unit__/2



182) test update battletag allow changing battletag when super (BackendWeb.BattletagControllerTest)
     test/backend_web/controllers/battletag_controller_test.exs:116
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/battletag_controller_test.exs:1: BackendWeb.BattletagControllerTest.__ex_unit__/2



183) test edit api_user renders form for editing chosen api_user (BackendWeb.ApiUserControllerTest)
     test/backend_web/controllers/api_user_controller_test.exs:57
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/api_user_controller_test.exs:1: BackendWeb.ApiUserControllerTest.__ex_unit__/2



184) test new api_user renders form (BackendWeb.ApiUserControllerTest)
     test/backend_web/controllers/api_user_controller_test.exs:27
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/api_user_controller_test.exs:1: BackendWeb.ApiUserControllerTest.__ex_unit__/2



185) test delete api_user deletes chosen api_user (BackendWeb.ApiUserControllerTest)
     test/backend_web/controllers/api_user_controller_test.exs:87
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/api_user_controller_test.exs:1: BackendWeb.ApiUserControllerTest.__ex_unit__/2



186) test create api_user redirects to show when data is valid (BackendWeb.ApiUserControllerTest)
     test/backend_web/controllers/api_user_controller_test.exs:36
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/api_user_controller_test.exs:1: BackendWeb.ApiUserControllerTest.__ex_unit__/2



187) test index lists all api_users (BackendWeb.ApiUserControllerTest)
     test/backend_web/controllers/api_user_controller_test.exs:18
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/api_user_controller_test.exs:1: BackendWeb.ApiUserControllerTest.__ex_unit__/2



188) test update api_user redirects when data is valid (BackendWeb.ApiUserControllerTest)
     test/backend_web/controllers/api_user_controller_test.exs:68
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/api_user_controller_test.exs:1: BackendWeb.ApiUserControllerTest.__ex_unit__/2



189) test create api_user renders errors when data is invalid (BackendWeb.ApiUserControllerTest)
     test/backend_web/controllers/api_user_controller_test.exs:46
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/api_user_controller_test.exs:1: BackendWeb.ApiUserControllerTest.__ex_unit__/2



190) test update api_user renders errors when data is invalid (BackendWeb.ApiUserControllerTest)
     test/backend_web/controllers/api_user_controller_test.exs:76
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/api_user_controller_test.exs:1: BackendWeb.ApiUserControllerTest.__ex_unit__/2



191) test GET /battlefy/tournaments-stats (BackendWeb.BattlefyControllerTest)
     test/backend_web/controllers/battlefy_controller_test.exs:4
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/battlefy_controller_test.exs:1: BackendWeb.BattlefyControllerTest.__ex_unit__/2



192) test GET /battlefy/third-party-tournaments/stats/ilh-events-eu-open redirects with title query param (BackendWeb.BattlefyControllerTest)
     test/backend_web/controllers/battlefy_controller_test.exs:37
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/battlefy_controller_test.exs:1: BackendWeb.BattlefyControllerTest.__ex_unit__/2



193) test GET /battlefy/tournaments-stats tournaments redirect (BackendWeb.BattlefyControllerTest)
     test/backend_web/controllers/battlefy_controller_test.exs:12
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/battlefy_controller_test.exs:1: BackendWeb.BattlefyControllerTest.__ex_unit__/2



194) test GET /battlefy/tournaments-stats?tournament_ids=5f5bc93e0c405a2571493bf4&title=TESTTITLE contains TESTTILE (BackendWeb.BattlefyControllerTest)
     test/backend_web/controllers/battlefy_controller_test.exs:25
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/battlefy_controller_test.exs:1: BackendWeb.BattlefyControllerTest.__ex_unit__/2



195) test #update_twitch_command/2 with valid data updates the twitch_command (Backend.TwitchBotTest)
     test/backend/twitch_bot_test.exs:67
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/twitch_bot_test.exs:1: Backend.TwitchBotTest.__ex_unit__/2



196) test #get_twitch_command!/1 returns the twitch_command with given id (Backend.TwitchBotTest)
     test/backend/twitch_bot_test.exs:39
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/twitch_bot_test.exs:1: Backend.TwitchBotTest.__ex_unit__/2



197) test #change_twitch_command/1 returns a twitch_command changeset (Backend.TwitchBotTest)
     test/backend/twitch_bot_test.exs:100
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/twitch_bot_test.exs:1: Backend.TwitchBotTest.__ex_unit__/2



198) test #create_twitch_command/1 with valid data creates a twitch_command (Backend.TwitchBotTest)
     test/backend/twitch_bot_test.exs:46
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/twitch_bot_test.exs:1: Backend.TwitchBotTest.__ex_unit__/2



199) test #list_twitch_commands/0 returns all twitch_commands (Backend.TwitchBotTest)
     test/backend/twitch_bot_test.exs:32
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/twitch_bot_test.exs:1: Backend.TwitchBotTest.__ex_unit__/2



200) test #update_twitch_command/2 with invalid data returns error changeset (Backend.TwitchBotTest)
     test/backend/twitch_bot_test.exs:84
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/twitch_bot_test.exs:1: Backend.TwitchBotTest.__ex_unit__/2



201) test #create_twitch_command/1 with invalid data returns error changeset (Backend.TwitchBotTest)
     test/backend/twitch_bot_test.exs:61
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/twitch_bot_test.exs:1: Backend.TwitchBotTest.__ex_unit__/2



202) test #paginate_twitch_commands/1 returns paginated list of twitch_commands (Backend.TwitchBotTest)
     test/backend/twitch_bot_test.exs:13
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/twitch_bot_test.exs:1: Backend.TwitchBotTest.__ex_unit__/2



203) test #delete_twitch_command/1 deletes the twitch_command (Backend.TwitchBotTest)
     test/backend/twitch_bot_test.exs:92
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/twitch_bot_test.exs:1: Backend.TwitchBotTest.__ex_unit__/2



204) test has ads includes ads when not logged in (BackendWeb.AdsTest)
     test/backend_web/controllers/ads_test.exs:5
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/ads_test.exs:1: BackendWeb.AdsTest.__ex_unit__/2



205) test no ads when hidden hides ads for hidden user (BackendWeb.AdsTest)
     test/backend_web/controllers/ads_test.exs:29
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/ads_test.exs:1: BackendWeb.AdsTest.__ex_unit__/2



206) test has ads includes ads when logged in (BackendWeb.AdsTest)
     test/backend_web/controllers/ads_test.exs:11
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/ads_test.exs:1: BackendWeb.AdsTest.__ex_unit__/2



207) test no ads for admin hides ads for admin (BackendWeb.AdsTest)
     test/backend_web/controllers/ads_test.exs:20
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/conn_case.ex:39: BackendWeb.ConnCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/conn_case.ex:1: BackendWeb.ConnCase.__ex_unit__/2
       test/backend_web/controllers/ads_test.exs:1: BackendWeb.AdsTest.__ex_unit__/2



208) test battletag_info change_battletag/1 returns a battletag changeset (Backend.BattlenetTest)
     test/backend/battlenet_test.exs:103
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/battlenet_test.exs:1: Backend.BattlenetTest.__ex_unit__/2



209) test #update_old_battletag/2 with valid data updates the old_battletag (Backend.BattlenetTest)
     test/backend/battlenet_test.exs:161
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/battlenet_test.exs:1: Backend.BattlenetTest.__ex_unit__/2



210) test battletag_info get_battletag!/1 returns the battletag with given id (Backend.BattlenetTest)
     test/backend/battlenet_test.exs:62
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/battlenet_test.exs:1: Backend.BattlenetTest.__ex_unit__/2



211) test #get_old_battletag!/1 returns the old_battletag with given id (Backend.BattlenetTest)
     test/backend/battlenet_test.exs:142
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/battlenet_test.exs:1: Backend.BattlenetTest.__ex_unit__/2



212) test battletag_info list_battletag_info/0 returns all battletag_info (Backend.BattlenetTest)
     test/backend/battlenet_test.exs:57
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/battlenet_test.exs:1: Backend.BattlenetTest.__ex_unit__/2



213) test battletag_info create_battletag/1 with invalid data returns error changeset (Backend.BattlenetTest)
     test/backend/battlenet_test.exs:76
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/battlenet_test.exs:1: Backend.BattlenetTest.__ex_unit__/2



214) test battletag_info update_battletag/2 with valid data updates the battletag (Backend.BattlenetTest)
     test/backend/battlenet_test.exs:80
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/battlenet_test.exs:1: Backend.BattlenetTest.__ex_unit__/2



215) test battletag_info paginate_battletag_info/1 returns paginated list of battletag_info (Backend.BattlenetTest)
     test/backend/battlenet_test.exs:40
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/battlenet_test.exs:1: Backend.BattlenetTest.__ex_unit__/2



216) test battletag_info delete_battletag/1 deletes the battletag (Backend.BattlenetTest)
     test/backend/battlenet_test.exs:97
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/battlenet_test.exs:1: Backend.BattlenetTest.__ex_unit__/2



217) test #change_old_battletag/1 returns a old_battletag changeset (Backend.BattlenetTest)
     test/backend/battlenet_test.exs:185
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/battlenet_test.exs:1: Backend.BattlenetTest.__ex_unit__/2



218) test #create_old_battletag/1 with valid data creates a old_battletag (Backend.BattlenetTest)
     test/backend/battlenet_test.exs:149
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/battlenet_test.exs:1: Backend.BattlenetTest.__ex_unit__/2



219) test battletag_info update_battletag/2 with invalid data returns error changeset (Backend.BattlenetTest)
     test/backend/battlenet_test.exs:91
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/battlenet_test.exs:1: Backend.BattlenetTest.__ex_unit__/2



220) test battletag_info create_battletag/1 with valid data creates a battletag (Backend.BattlenetTest)
     test/backend/battlenet_test.exs:67
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/battlenet_test.exs:1: Backend.BattlenetTest.__ex_unit__/2



221) test #list_old_battletags/0 returns all old_battletags (Backend.BattlenetTest)
     test/backend/battlenet_test.exs:135
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/battlenet_test.exs:1: Backend.BattlenetTest.__ex_unit__/2



222) test #update_old_battletag/2 with invalid data returns error changeset (Backend.BattlenetTest)
     test/backend/battlenet_test.exs:169
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/battlenet_test.exs:1: Backend.BattlenetTest.__ex_unit__/2



223) test #create_old_battletag/1 with invalid data returns error changeset (Backend.BattlenetTest)
     test/backend/battlenet_test.exs:155
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/battlenet_test.exs:1: Backend.BattlenetTest.__ex_unit__/2



224) test #paginate_old_battletags/1 returns paginated list of old_battletags (Backend.BattlenetTest)
     test/backend/battlenet_test.exs:116
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/battlenet_test.exs:1: Backend.BattlenetTest.__ex_unit__/2



225) test #delete_old_battletag/1 deletes the old_battletag (Backend.BattlenetTest)
     test/backend/battlenet_test.exs:177
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/battlenet_test.exs:1: Backend.BattlenetTest.__ex_unit__/2



226) test leagues update_league/2 with valid data updates the league (Backend.FantasyTest)
     test/backend/fantasy_test.exs:91
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/fantasy_test.exs:1: Backend.FantasyTest.__ex_unit__/2



227) test leagues get_league!/1 returns the league with given id (Backend.FantasyTest)
     test/backend/fantasy_test.exs:69
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/fantasy_test.exs:1: Backend.FantasyTest.__ex_unit__/2



228) test leagues change_league/1 returns a league changeset (Backend.FantasyTest)
     test/backend/fantasy_test.exs:115
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/fantasy_test.exs:1: Backend.FantasyTest.__ex_unit__/2



229) test leagues create_league/1 with valid data creates a league (Backend.FantasyTest)
     test/backend/fantasy_test.exs:74
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/fantasy_test.exs:1: Backend.FantasyTest.__ex_unit__/2



230) test leagues list_leagues/0 returns all leagues (Backend.FantasyTest)
     test/backend/fantasy_test.exs:64
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/fantasy_test.exs:1: Backend.FantasyTest.__ex_unit__/2



231) test leagues update_league/2 with invalid data returns error changeset (Backend.FantasyTest)
     test/backend/fantasy_test.exs:103
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/fantasy_test.exs:1: Backend.FantasyTest.__ex_unit__/2



232) test leagues create_league/1 with invalid data returns error changeset (Backend.FantasyTest)
     test/backend/fantasy_test.exs:87
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/fantasy_test.exs:1: Backend.FantasyTest.__ex_unit__/2



233) test leagues paginate_leagues/1 returns paginated list of leagues (Backend.FantasyTest)
     test/backend/fantasy_test.exs:47
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/fantasy_test.exs:1: Backend.FantasyTest.__ex_unit__/2



234) test leagues delete_league/1 deletes the league (Backend.FantasyTest)
     test/backend/fantasy_test.exs:109
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/fantasy_test.exs:1: Backend.FantasyTest.__ex_unit__/2



235) test api_users update_api_user/2 with valid data updates the api_user (Backend.ApiTest)
     test/backend/api_test.exs:59
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/api_test.exs:1: Backend.ApiTest.__ex_unit__/2



236) test api_users get_api_user!/1 returns the api_user with given id (Backend.ApiTest)
     test/backend/api_test.exs:44
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/api_test.exs:1: Backend.ApiTest.__ex_unit__/2



237) test api_users change_api_user/1 returns a api_user changeset (Backend.ApiTest)
     test/backend/api_test.exs:79
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/api_test.exs:1: Backend.ApiTest.__ex_unit__/2



238) test api_users create_api_user/1 with valid data creates a api_user (Backend.ApiTest)
     test/backend/api_test.exs:49
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/api_test.exs:1: Backend.ApiTest.__ex_unit__/2



239) test api_users list_api_users/0 returns all api_users (Backend.ApiTest)
     test/backend/api_test.exs:39
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/api_test.exs:1: Backend.ApiTest.__ex_unit__/2



240) test api_users update_api_user/2 with invalid data returns error changeset (Backend.ApiTest)
     test/backend/api_test.exs:67
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/api_test.exs:1: Backend.ApiTest.__ex_unit__/2



241) test api_users create_api_user/1 with invalid data returns error changeset (Backend.ApiTest)
     test/backend/api_test.exs:55
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/api_test.exs:1: Backend.ApiTest.__ex_unit__/2



242) test api_users paginate_api_users/1 returns paginated list of api_users (Backend.ApiTest)
     test/backend/api_test.exs:22
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/api_test.exs:1: Backend.ApiTest.__ex_unit__/2



243) test api_users delete_api_user/1 deletes the api_user (Backend.ApiTest)
     test/backend/api_test.exs:73
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/api_test.exs:1: Backend.ApiTest.__ex_unit__/2



244) test broadcasts update_broadcast/2 with valid data updates the broadcast (Backend.DiscordTest)
     test/backend/discord_test.exs:55
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/discord_test.exs:1: Backend.DiscordTest.__ex_unit__/2



245) test broadcasts get_broadcast!/1 returns the broadcast with given id (Backend.DiscordTest)
     test/backend/discord_test.exs:39
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/discord_test.exs:1: Backend.DiscordTest.__ex_unit__/2



246) test broadcasts change_broadcast/1 returns a broadcast changeset (Backend.DiscordTest)
     test/backend/discord_test.exs:75
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/discord_test.exs:1: Backend.DiscordTest.__ex_unit__/2



247) test broadcasts create_broadcast/1 with valid data creates a broadcast (Backend.DiscordTest)
     test/backend/discord_test.exs:44
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/discord_test.exs:1: Backend.DiscordTest.__ex_unit__/2



248) test broadcasts list_broadcasts/0 returns all broadcasts (Backend.DiscordTest)
     test/backend/discord_test.exs:34
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/discord_test.exs:1: Backend.DiscordTest.__ex_unit__/2



249) test broadcasts update_broadcast/2 with invalid data returns error changeset (Backend.DiscordTest)
     test/backend/discord_test.exs:63
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/discord_test.exs:1: Backend.DiscordTest.__ex_unit__/2



250) test broadcasts create_broadcast/1 with invalid data returns error changeset (Backend.DiscordTest)
     test/backend/discord_test.exs:51
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/discord_test.exs:1: Backend.DiscordTest.__ex_unit__/2



251) test broadcasts delete_broadcast/1 deletes the broadcast (Backend.DiscordTest)
     test/backend/discord_test.exs:69
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/discord_test.exs:1: Backend.DiscordTest.__ex_unit__/2



252) test game_dto creates correct ecto attrs (Backend.GameDtoTest)
     test/backend/game_dto_test.exs:28
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/game_dto_test.exs:1: Backend.GameDtoTest.__ex_unit__/2



253) test games handle_game/1 returns new game and updates it (Backend.DeckTrackerTest)
     test/backend/deck_tracker_test.exs:29
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/deck_tracker_test.exs:1: Backend.DeckTrackerTest.__ex_unit__/2



254) test streamer_decks log_won_game_increases_wins (Backend.StreamingTest)
     test/backend/streaming_test.exs:35
     ** (RuntimeError) could not lookup Ecto repo Backend.Repo because it was not started or it does not exist
     stacktrace:
       (ecto 3.7.1) lib/ecto/repo/registry.ex:22: Ecto.Repo.Registry.lookup/1
       (ecto 3.7.1) lib/ecto/adapter.ex:132: Ecto.Adapter.lookup_meta/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:571: Ecto.Adapters.SQL.Sandbox.lookup_meta!/1
       (ecto_sql 3.7.1) lib/ecto/adapters/sql/sandbox.ex:484: Ecto.Adapters.SQL.Sandbox.checkout/2
       (backend 0.1.0) test/support/data_case.ex:29: Backend.DataCase.__ex_unit_setup_0/1
       (backend 0.1.0) test/support/data_case.ex:1: Backend.DataCase.__ex_unit__/2
       test/backend/streaming_test.exs:1: Backend.StreamingTest.__ex_unit__/2



Finished in 2.8 seconds (2.8s async, 0.04s sync)
61 doctests, 193 tests, 254 failures

Randomized with seed 855825
