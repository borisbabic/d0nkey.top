# credo:disable-for-this-file Credo.Check.Refactor.CyclomaticComplexity
defmodule Backend.DeckArchetyper do
  @moduledoc "Determines the archetype of a deck"
  import Backend.DeckArchetyper.ArchetyperHelpers

  alias Backend.DeckArchetyper.Twist.WhizbangHeroesArchetyper
  alias Backend.DeckArchetyper.Twist.WondersArchetyper
  alias Backend.DeckArchetyper.DeathKnightArchetyper
  alias Backend.DeckArchetyper.DemonHunterArchetyper
  alias Backend.DeckArchetyper.DruidArchetyper
  alias Backend.DeckArchetyper.HunterArchetyper
  alias Backend.DeckArchetyper.MageArchetyper
  alias Backend.DeckArchetyper.PaladinArchetyper
  alias Backend.DeckArchetyper.PriestArchetyper
  alias Backend.DeckArchetyper.RogueArchetyper
  alias Backend.DeckArchetyper.ShamanArchetyper
  alias Backend.DeckArchetyper.WarlockArchetyper
  alias Backend.DeckArchetyper.WarriorArchetyper
  alias Backend.Hearthstone.Deck

  @spec archetype(integer(), [integer()], String.t()) :: atom() | nil
  def archetype(format, cards, class),
    do: archetype(%{format: format, cards: cards, class: class})

  @type deck :: Deck.t() | %{format: integer(), cards: [integer()], class: String.t()}
  @spec archetype(deck() | String.t()) :: atom() | nil
  def archetype(deck = %{class: nil, hero: hero}) do
    case Backend.Hearthstone.class(hero) do
      nil -> nil
      class -> deck |> Map.put(:class, class) |> archetype()
    end
  end

  def archetype(%{cards: _cards} = deck) do
    card_info = full_cards(deck)
    class_name = Deck.class_name(deck)

    cond do
      splendiferous_whizbang?(card_info) ->
        :"Splendiferous Whizbang"

      all_odd?(card_info) and baku?(card_info) ->
        String.to_atom("Odd #{class_name}")

      all_even?(card_info) and genn?(card_info) ->
        String.to_atom("Even #{class_name}")

      # people queue standard decks in wild, lets not muddy up wild stats with those
      standard_in_wild?(card_info) ->
        deck = Map.put(deck, :format, 2)
        card_info = Map.put(card_info, :deck, deck)
        String.to_atom("STD #{archetype(deck, card_info)}")

      true ->
        archetype(deck, card_info)
    end
  end

  def archetype(_), do: nil

  defp archetype(deck, card_info) do
    case {deck, Deck.class(deck)} do
      {%{format: 2}, "DEATHKNIGHT"} -> DeathKnightArchetyper.standard(card_info)
      {%{format: 2}, "DEMONHUNTER"} -> DemonHunterArchetyper.standard(card_info)
      {%{format: 2}, "DRUID"} -> DruidArchetyper.standard(card_info)
      {%{format: 2}, "HUNTER"} -> HunterArchetyper.standard(card_info)
      {%{format: 2}, "MAGE"} -> MageArchetyper.standard(card_info)
      {%{format: 2}, "PALADIN"} -> PaladinArchetyper.standard(card_info)
      {%{format: 2}, "PRIEST"} -> PriestArchetyper.standard(card_info)
      {%{format: 2}, "ROGUE"} -> RogueArchetyper.standard(card_info)
      {%{format: 2}, "SHAMAN"} -> ShamanArchetyper.standard(card_info)
      {%{format: 2}, "WARLOCK"} -> WarlockArchetyper.standard(card_info)
      {%{format: 2}, "WARRIOR"} -> WarriorArchetyper.standard(card_info)
      {%{format: 1}, "DEATHKNIGHT"} -> DeathKnightArchetyper.wild(card_info)
      {%{format: 1}, "DEMONHUNTER"} -> DemonHunterArchetyper.wild(card_info)
      {%{format: 1}, "DRUID"} -> DruidArchetyper.wild(card_info)
      {%{format: 1}, "HUNTER"} -> HunterArchetyper.wild(card_info)
      {%{format: 1}, "MAGE"} -> MageArchetyper.wild(card_info)
      {%{format: 1}, "PALADIN"} -> PaladinArchetyper.wild(card_info)
      {%{format: 1}, "PRIEST"} -> PriestArchetyper.wild(card_info)
      {%{format: 1}, "ROGUE"} -> RogueArchetyper.wild(card_info)
      {%{format: 1}, "SHAMAN"} -> ShamanArchetyper.wild(card_info)
      {%{format: 1}, "WARLOCK"} -> WarlockArchetyper.wild(card_info)
      {%{format: 1}, "WARRIOR"} -> WarriorArchetyper.wild(card_info)
      {%{format: 4}, _} -> WondersArchetyper.archetype(card_info)
      # {%{format: 4}, _} -> WhizbangHeroesArchetyper.archetype(card_info)
      _ -> nil
    end
  end

  defp standard_in_wild?(%{deck: %{format: 1}, full_cards: full_cards}) do
    standard_sets = Backend.Hearthstone.standard_card_sets()

    not_in_standard = fn
      %{card_set: %{slug: slug}} ->
        !(slug in standard_sets)

      _ ->
        false
    end

    !Enum.any?(full_cards, not_in_standard)
  end

  defp standard_in_wild?(_), do: false

  defp splendiferous_whizbang?(ci) do
    # generated by Scratchpad.whizbang_codes_code
    "Splendiferous Whizbang" in ci.card_names or
      min_count?(ci, 16, [
        "Bloodmage Thalnos",
        "Dryscale Deputy",
        "Multicaster",
        "Thrive in the Shadows",
        "Wild Growth",
        "Hellfire",
        "Consecration",
        "Chaos Strike",
        "Coral Keeper",
        "Bash",
        "Remorseless Winter",
        "Hipster",
        "Celestial Shot",
        "Elemental Inspiration",
        "Fan of Knives",
        "Clearance Promoter"
      ]) or
      min_count?(ci, 16, [
        "Ci'Cigi",
        "Ball Hog",
        "Magtheridon, Unreleased",
        "Illidari Inquisitor",
        "Chaos Nova",
        "Aldrachi Warblades",
        "Chaos Strike",
        "Raging Felscreamer",
        "Eye Beam",
        "Illidari Studies",
        "Spirit of the Team",
        "Workshop Mishap",
        "Umpire's Grasp",
        "Red Card",
        "Window Shopper",
        "Wish"
      ]) or
      min_count?(ci, 6, [
        "Nourish",
        "Wild Growth",
        "Overgrowth",
        "Crystal Cluster",
        "Invigorate",
        "Moment of Discovery"
      ]) or
      min_count?(ci, 15, [
        "Emperor Thaurissan",
        "Acidmaw",
        "Dreadscale",
        "Zixor, Apex Predator",
        "Beastmaster Leoroxx",
        "King Krush",
        "Blademaster Okani",
        "The Sunwell",
        "Lor'themar Theron",
        "Astalor Bloodsworn",
        "Mister Mukla",
        "Zilliax",
        "Stranglethorn Heart",
        "Flint Firearm",
        "King Plush"
      ]) or
      min_count?(ci, 1, ["Morphing Card"]) or
      min_count?(ci, 10, [
        "Reno Jackson",
        "Brann Bronzebeard",
        "Elise Starseeker",
        "Sir Finley of the Sands",
        "Elise the Enlightened",
        "Reno the Relicologist",
        "Dinotamer Brann",
        "Dragonqueen Alexstrasza",
        "The Amazing Reno",
        "Sir Finley, Sea Guide"
      ]) or
      min_count?(ci, 15, [
        "Psychic Conjurer",
        "Shadow Word: Death",
        "Zola the Gorgon",
        "Love Everlasting",
        "Pip the Potent",
        "Shadow Word: Pain",
        "Thrive in the Shadows",
        "Holy Nova",
        "Holy Smite",
        "Lightbomb",
        "Crimson Clergy",
        "Fan Club",
        "Celestial Projectionist",
        "Shattered Reflections",
        "Astral Automaton"
      ]) or
      min_count?(ci, 14, [
        "Fogsail Freebooter",
        "Shoplifter Goldbeard",
        "Sonya Waterdancer",
        "Deadly Poison",
        "Shadowstep",
        "Swashburglar",
        "Hench-Clan Burglar",
        "Mixtape",
        "Breakdance",
        "Kaja'mite Creation",
        "Quick Pick",
        "Dig for Treasure",
        "Sandbox Scoundrel",
        "Watercannon"
      ]) or
      min_count?(ci, 17, [
        "Neptulon",
        "Sir Finley Mrrgglton",
        "Scargil",
        "Quest Accepted!",
        "Siltfin Spiritwalker",
        "Ancestral Knowledge",
        "Finders Keepers",
        "Brrrloc",
        "Underbelly Angler",
        "Sludge Slurper",
        "Fishflinger",
        "South Coast Chieftain",
        "Spawnpool Forager",
        "Gorloc Ravager",
        "Clownfish",
        "Command of Neptulon",
        "Turn the Tides"
      ]) or
      min_count?(ci, 13, [
        "Chef Nomi",
        "Archivist Elysiana",
        "Blood Shard Bristleback",
        "Neeru Fireblade",
        "Rin, Orchestrator of Doom",
        "Fanottem, Lord of the Opera",
        "Barrens Scavenger",
        "Waste Remover",
        "Fracking",
        "Tar Slime",
        "Scarab Keychain",
        "Chaos Creation",
        "Furnace Fuel"
      ]) or
      min_count?(ci, 21, [
        "Arch-Thief Rafaam",
        "Dr. Boom, Mad Genius",
        "Rafaam's Scheme",
        "Dr. Boom's Scheme",
        "Hagatha's Scheme",
        "Togwaggle's Scheme",
        "Lazul's Scheme",
        "Heistbaron Togwaggle",
        "Arch-Villain Rafaam",
        "Swampqueen Hagatha",
        "Madame Lazul",
        "Dr. Boom",
        "EVIL Cable Rat",
        "EVIL Conscripter",
        "EVIL Miscreant",
        "Plot Twist",
        "Sinister Deal",
        "EVIL Totem",
        "Livewire Lance",
        "EVIL Quartermaster",
        "Shiv"
      ]) or
      min_count?(ci, 18, [
        "Body Bagger",
        "Rolling Stone",
        "Mosh Pit",
        "Halveria Darkraven",
        "Rush the Stage",
        "Climactic Necrotic Explosion",
        "Coordinated Strike",
        "Feast of Souls",
        "Crimson Sigil Runner",
        "Possessifier",
        "Defrost",
        "Chillfallen Baron",
        "Corpse Bride",
        "Bonedigger Geist",
        "Wrathscale Naga",
        "Snakebite",
        "SECURITY!!",
        "Tour Guide"
      ]) or
      min_count?(ci, 17, [
        "Wrath",
        "Kodohide Drumkit",
        "Zok Fogsnout",
        "Kiri, Chosen of Elune",
        "Shield Slam",
        "Shield Block",
        "Razorfen Rockstar",
        "Verse Riff",
        "Chorus Riff",
        "Bridge Riff",
        "Peaceful Piper",
        "Harmonic Mood",
        "Free Spirit",
        "Spread the Word",
        "Groovy Cat",
        "Woodcutter's Axe",
        "Tour Guide"
      ]) or
      min_count?(ci, 16, [
        "Overlord Runthak",
        "Deathbringer Saurfang",
        "Righteous Protector",
        "Annoy-o-Tron",
        "Nerubian Swarmguard",
        "Chillfallen Baron",
        "Vicious Bloodworm",
        "Blood Tap",
        "Darkfallen Neophyte",
        "Malignant Horror",
        "Disco Maul",
        "Jitterbug",
        "Funkfin",
        "Harmonic Metal",
        "Party Animal",
        "Grimestreet Outfitter"
      ]) or
      min_count?(ci, 16, [
        "Quick Shot",
        "Bounce Around (ft. Garona)",
        "Backstab",
        "Deadly Poison",
        "Tracking",
        "Shadowstep",
        "Preparation",
        "Gadgetzan Auctioneer",
        "Harmonica Soloist",
        "Beatboxer",
        "Breakdance",
        "Jungle Jammer",
        "Arrow Smith",
        "Bunch of Bananas",
        "Barrel of Monkeys",
        "Eviscerate"
      ]) or
      min_count?(ci, 17, [
        "Aegwynn, the Guardian",
        "Bloodmage Thalnos",
        "Saxophone Soloist",
        "Fire Sale",
        "Novice Zapper",
        "Lightning Bolt",
        "Lightning Storm",
        "Shooting Star",
        "Keyboard Soloist",
        "Lightshow",
        "Rewind",
        "Audio Splitter",
        "Flowrider",
        "Volume Up",
        "Overdraft",
        "Zap!",
        "Ancestral Knowledge"
      ]) or
      min_count?(ci, 20, [
        "Shadow Word: Death",
        "Siphon Soul",
        "Twisting Nether",
        "Lord Jaraxxus",
        "Drain Soul",
        "Rin, Orchestrator of Doom",
        "Love Everlasting",
        "Symphony of Sins",
        "Photographer Fizzle",
        "Shard of the Naaru",
        "Lightbomb",
        "Thrive in the Shadows",
        "Holy Nova",
        "Holy Smite",
        "Mortal Coil",
        "Doomsayer",
        "Opera Soloist",
        "Idol's Adoration",
        "Fight Over Me",
        "Defile"
      ]) or
      min_count?(ci, 16, [
        "Altruis the Outcast",
        "Metamorphosis",
        "Umberwing",
        "Imprisoned Antaen",
        "Raging Felscreamer",
        "Shadowhoof Slayer",
        "Crimson Sigil Runner",
        "Spectral Sight",
        "Priestess of Fury",
        "Satyr Overseer",
        "Furious Felfin",
        "Skull of Gul'dan",
        "Twin Slice",
        "Eye Beam",
        "Aldrachi Warblades",
        "Battlefiend"
      ]) or
      min_count?(ci, 17, [
        "Shudderwock",
        "Barista Lynchen",
        "Kronx Dragonhoof",
        "Galakrond, the Tempest",
        "Mana Tide Totem",
        "Far Sight",
        "Lifedrinker",
        "Mutate",
        "Sludge Slurper",
        "EVIL Totem",
        "Dragon's Pack",
        "Corrupt Elementalist",
        "Shield of Galakrond",
        "Devoted Maniac",
        "Invocation of Frost",
        "Faceless Corruptor",
        "Mogu Fleshshaper"
      ]) or
      min_count?(ci, 17, [
        "Dr. Boom, Mad Genius",
        "Zilliax",
        "Augmented Elekk",
        "Blastmaster Boom",
        "Brawl",
        "Shield Slam",
        "Town Crier",
        "Warpath",
        "Militia Commander",
        "Weapons Project",
        "Omega Assembly",
        "Dyn-o-matic",
        "Eternium Rover",
        "Clockwork Goblin",
        "Wrenchcalibur",
        "Omega Devastator",
        "Shield Block"
      ]) or
      min_count?(ci, 17, [
        "Spiritsinger Umbra",
        "Bloodreaver Gul'dan",
        "Skull of the Man'ari",
        "Lord Godfrey",
        "Doomsayer",
        "Doomguard",
        "Hellfire",
        "Mortal Coil",
        "Stonehill Defender",
        "Defile",
        "Kobold Librarian",
        "Dark Pact",
        "Lesser Amethyst Spellstone",
        "Carnivorous Cube",
        "Voidlord",
        "Voodoo Doll",
        "Possessed Lackey"
      ]) or
      min_count?(ci, 17, [
        "Edwin VanCleef",
        "Moroes",
        "Patches the Pirate",
        "The Caverns Below",
        "Backstab",
        "Novice Engineer",
        "Shadowstep",
        "Youthful Brewmaster",
        "Stonetusk Boar",
        "Southsea Deckhand",
        "Eviscerate",
        "Violet Teacher",
        "Preparation",
        "Swashburglar",
        "Gadgetzan Ferryman",
        "Mimic Pod",
        "Fan of Knives"
      ]) or
      min_count?(ci, 15, [
        "Ci'Cigi",
        "Ball Hog",
        "Magtheridon, Unreleased",
        "Illidari Inquisitor",
        "Chaos Nova",
        "Aldrachi Warblades",
        "Chaos Strike",
        "Raging Felscreamer",
        "Eye Beam",
        "Illidari Studies",
        "Spirit of the Team",
        "Workshop Mishap",
        "Umpire's Grasp",
        "Red Card",
        "Window Shopper"
      ]) or
      min_count?(ci, 10, [
        "Kun the Forgotten King",
        "Yogg-Saron, Master of Fate",
        "Convoke the Spirits",
        "Ultimate Infestation",
        "Eonar, the Life-Binder",
        "Overgrowth",
        "Wild Growth",
        "Nourish",
        "Crystal Cluster",
        "Invigorate"
      ]) or
      min_count?(ci, 14, [
        "Psychic Conjurer",
        "Shadow Word: Death",
        "Zola the Gorgon",
        "Love Everlasting",
        "Pip the Potent",
        "Crimson Clergy",
        "Thrive in the Shadows",
        "Holy Nova",
        "Holy Smite",
        "Lightbomb",
        "Astral Automaton",
        "Fan Club",
        "Celestial Projectionist",
        "Shadow Word: Pain"
      ]) or
      min_count?(ci, 14, [
        "Patches the Pirate",
        "Pirate Admiral Hooktusk",
        "Sonya Waterdancer",
        "Deadly Poison",
        "Shadowstep",
        "Swashburglar",
        "Filletfighter",
        "Hench-Clan Burglar",
        "Breakdance",
        "Kaja'mite Creation",
        "Quick Pick",
        "Dig for Treasure",
        "Sandbox Scoundrel",
        "Watercannon"
      ]) or
      min_count?(ci, 15, [
        "Scargil",
        "Finders Keepers",
        "Primalfin Lookout",
        "Underbelly Angler",
        "Sludge Slurper",
        "Fishflinger",
        "Serpentshrine Portal",
        "South Coast Chieftain",
        "Spawnpool Forager",
        "Gorloc Ravager",
        "Clownfish",
        "Command of Neptulon",
        "Brrrloc",
        "Turn the Tides",
        "Ancestral Knowledge"
      ]) or
      min_count?(ci, 13, [
        "Chef Nomi",
        "Archivist Elysiana",
        "Blood Shard Bristleback",
        "Neeru Fireblade",
        "Rin, Orchestrator of Doom",
        "Fanottem, Lord of the Opera",
        "Barrens Scavenger",
        "Waste Remover",
        "Fracking",
        "Tar Slime",
        "Scarab Keychain",
        "Chaos Creation",
        "Furnace Fuel"
      ]) or
      min_count?(ci, 15, [
        "Emperor Thaurissan",
        "Zixor, Apex Predator",
        "Astromancer Solarian",
        "Beastmaster Leoroxx",
        "Reliquary of Souls",
        "Serena Bloodfeather",
        "King Krush",
        "Blademaster Okani",
        "Lor'themar Theron",
        "Mister Mukla",
        "Zilliax",
        "Infinitize the Maxitude",
        "Velarok Windblade",
        "Flint Firearm",
        "King Plush"
      ]) or
      min_count?(ci, 19, [
        "Dr. Boom, Mad Genius",
        "Togwaggle's Scheme",
        "Heistbaron Togwaggle",
        "Swampqueen Hagatha",
        "Dark Pharaoh Tekahn",
        "Grand Lackey Erkh",
        "Madame Lazul",
        "Arch-Villain Rafaam",
        "Hagatha's Scheme",
        "EVIL Cable Rat",
        "EVIL Conscripter",
        "EVIL Miscreant",
        "Sinister Deal",
        "EVIL Recruiter",
        "Weaponized Wasp",
        "EVIL Totem",
        "Livewire Lance",
        "Whispers of EVIL",
        "EVIL Quartermaster"
      ]) or
      min_count?(ci, 15, [
        "Hallucination",
        "Multicaster",
        "Thrive in the Shadows",
        "Wild Growth",
        "Consecration",
        "Chaos Strike",
        "Coral Keeper",
        "Hellfire",
        "Bash",
        "Remorseless Winter",
        "Hipster",
        "Elemental Inspiration",
        "Patchwork Pals",
        "Clearance Promoter",
        "Primordial Glyph"
      ])
  end
end
